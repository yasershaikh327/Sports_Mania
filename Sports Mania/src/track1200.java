
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author syase
 */
public class track1200 extends javax.swing.JFrame {
String db_URL="jdbc:mysql://localhost:3306/sports_mania?zeroDateTimeBehavior=convertToNull";
    String db_USER="root";
    String db_password="";
    Connection conn=null;
    Statement stmt=null;
    ResultSet rs=null;

    public track1200() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        team_com = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        p = new javax.swing.JTable();
        insert = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        exit = new javax.swing.JButton();
        w = new javax.swing.JButton();
        n_tf = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 51));

        jLabel1.setFont(new java.awt.Font("Bahnschrift", 0, 18)); // NOI18N
        jLabel1.setText("TRACK EVENT : 1200M");

        team_com.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "select team", "FYBBA", "SYBBA", "TYBBA", "FYBAMC", "SYBAMC", "TYBBMM", "TYBSW", "FYBBA T&T", "SYBBA T&T", "TYBBA T&T", "FYBCA", "SYBCA", "TYBCA" }));
        team_com.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                team_comActionPerformed(evt);
            }
        });

        p.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "roll", "name", "mail", "ag", "ph", "gender", "Year", "dep", "event", "colour", "Unique Chest Number", "Team"
            }
        ));
        jScrollPane2.setViewportView(p);

        insert.setBackground(new java.awt.Color(255, 255, 255));
        insert.setText("Insert");
        insert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertActionPerformed(evt);
            }
        });

        delete.setBackground(new java.awt.Color(255, 255, 255));
        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        exit.setBackground(new java.awt.Color(255, 255, 255));
        exit.setText("Exit");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });

        w.setBackground(new java.awt.Color(255, 255, 255));
        w.setText("BACK");
        w.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wActionPerformed(evt);
            }
        });

        n_tf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                n_tfActionPerformed(evt);
            }
        });

        jLabel2.setText("ENTER THE ROLL NUMBER TO BE DELETED");

        jButton1.setText("REFRESH");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 760, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(insert, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45)
                        .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(w, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(57, 57, 57)
                        .addComponent(exit, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(n_tf, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(191, 191, 191))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(237, 237, 237))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(team_com, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(team_com, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(insert, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(exit, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(w, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(n_tf, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitActionPerformed

    private void team_comActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_team_comActionPerformed


        if(team_com.getSelectedIndex()==1)
 {p.removeAll();
        int rows=0,cols=0;
                //int i = 0;
                 //DefaultTableModel model=( DefaultTableModel) x.getModel();
        try
        {  
            conn=DriverManager.getConnection(db_URL,db_USER,db_password);
            stmt=conn.createStatement();
            rs=stmt.executeQuery("SELECT * FROM sports_mania_table WHERE Team='FYBBA' AND event='1200 M';");
             
            while(rs.next())
            {
               p.setValueAt(rs.getString(1), rows, cols++);
               p.setValueAt(rs.getString(2), rows, cols++);
               p.setValueAt(rs.getString(3), rows, cols++);
               p.setValueAt(rs.getString(4), rows, cols++);
               p.setValueAt(rs.getString(5), rows, cols++);
               p.setValueAt(rs.getString(6), rows, cols++);
               p.setValueAt(rs.getString(7), rows, cols++);
               p.setValueAt(rs.getString(8), rows, cols++);
               p.setValueAt(rs.getString(9), rows, cols++);
               p.setValueAt(rs.getString(10), rows, cols++);
               p.setValueAt(rs.getInt(11), rows, cols++);
               p.setValueAt(rs.getString(12), rows, cols++);
               rows++;
               cols=0;
   
            }
 
               
           rs.close();
            stmt.close();
            conn.close();
       
            }
       
                
       catch(SQLException e)
        {
            System.out.print("  SQL EXCEPTION  "+e.getMessage());
        }
        catch(Exception ex)
        {
           System.out.print("  EXCEPTION  "+ex.getMessage());
        }  
        
 }
 else if(team_com.getSelectedIndex()==2)
 {p.removeAll();
        int rows=0,cols=0;
                //int i = 0;
                // DefaultTableModel model=( DefaultTableModel) x.getModel();
        try
        {  
            conn=DriverManager.getConnection(db_URL,db_USER,db_password);
            stmt=conn.createStatement();
            rs=stmt.executeQuery("SELECT * FROM sports_mania_table WHERE Team='SYBBA' AND event='1200 M';");
             
            while(rs.next())
            {
               p.setValueAt(rs.getString(1), rows, cols++);
               p.setValueAt(rs.getString(2), rows, cols++);
               p.setValueAt(rs.getString(3), rows, cols++);
               p.setValueAt(rs.getString(4), rows, cols++);
               p.setValueAt(rs.getString(5), rows, cols++);
               p.setValueAt(rs.getString(6), rows, cols++);
               p.setValueAt(rs.getString(7), rows, cols++);
               p.setValueAt(rs.getString(8), rows, cols++);
               p.setValueAt(rs.getString(9), rows, cols++);
               p.setValueAt(rs.getString(10), rows, cols++);
               p.setValueAt(rs.getInt(11), rows, cols++);
               p.setValueAt(rs.getString(12), rows, cols++);
               rows++;
               cols=0;
   
            }
 
               
           rs.close();
            stmt.close();
            conn.close();
       
            }
       
                
       catch(SQLException e)
        {
            System.out.print("  SQL EXCEPTION  "+e.getMessage());
        }
        catch(Exception ex)
        {
           System.out.print("  EXCEPTION  "+ex.getMessage());
        }  
 }
        else if(team_com.getSelectedIndex()==3)
 {p.removeAll();
        int rows=0,cols=0;
                //int i = 0;
                // DefaultTableModel model=( DefaultTableModel) x.getModel();
        try
        {  
            conn=DriverManager.getConnection(db_URL,db_USER,db_password);
            stmt=conn.createStatement();
            rs=stmt.executeQuery("SELECT * FROM sports_mania_table WHERE Team='TYBBA' AND event='1200 M';");
             
            while(rs.next())
            {
               p.setValueAt(rs.getString(1), rows, cols++);
               p.setValueAt(rs.getString(2), rows, cols++);
               p.setValueAt(rs.getString(3), rows, cols++);
               p.setValueAt(rs.getString(4), rows, cols++);
               p.setValueAt(rs.getString(5), rows, cols++);
               p.setValueAt(rs.getString(6), rows, cols++);
               p.setValueAt(rs.getString(7), rows, cols++);
               p.setValueAt(rs.getString(8), rows, cols++);
               p.setValueAt(rs.getString(9), rows, cols++);
               p.setValueAt(rs.getString(10), rows, cols++);
               p.setValueAt(rs.getInt(11), rows, cols++);
               p.setValueAt(rs.getString(12), rows, cols++);
               rows++;
               cols=0;
   
            }
 
               
           rs.close();
            stmt.close();
            conn.close();
       
            }
       
                
       catch(SQLException e)
        {
            System.out.print("  SQL EXCEPTION  "+e.getMessage());
        }
        catch(Exception ex)
        {
           System.out.print("  EXCEPTION  "+ex.getMessage());
        } 
 }
        else   if(team_com.getSelectedIndex()==4)
 {p.removeAll();
        int rows=0,cols=0;
               // int i = 0;
               //  DefaultTableModel model=( DefaultTableModel) x.getModel();
        try
        {  
            conn=DriverManager.getConnection(db_URL,db_USER,db_password);
            stmt=conn.createStatement();
            rs=stmt.executeQuery("SELECT * FROM sports_mania_table WHERE Team='FYBAMC' AND event='1200 M';");
             
            while(rs.next())
            {
               p.setValueAt(rs.getString(1), rows, cols++);
               p.setValueAt(rs.getString(2), rows, cols++);
               p.setValueAt(rs.getString(3), rows, cols++);
               p.setValueAt(rs.getString(4), rows, cols++);
               p.setValueAt(rs.getString(5), rows, cols++);
               p.setValueAt(rs.getString(6), rows, cols++);
               p.setValueAt(rs.getString(7), rows, cols++);
               p.setValueAt(rs.getString(8), rows, cols++);
               p.setValueAt(rs.getString(9), rows, cols++);
               p.setValueAt(rs.getString(10), rows, cols++);
               p.setValueAt(rs.getInt(11), rows, cols++);
               p.setValueAt(rs.getString(12), rows, cols++);
               rows++;
               cols=0;
   
            }
 
               
           rs.close();
            stmt.close();
            conn.close();
       
            }
       
                
       catch(SQLException e)
        {
            System.out.print("  SQL EXCEPTION  "+e.getMessage());
        }
        catch(Exception ex)
        {
           System.out.print("  EXCEPTION  "+ex.getMessage());
        } 
 }
        
    else   if(team_com.getSelectedIndex()==5)
 {p.removeAll();
        int rows=0,cols=0;
               // int i = 0;
               //  DefaultTableModel model=( DefaultTableModel) x.getModel();
        try
        {  
            conn=DriverManager.getConnection(db_URL,db_USER,db_password);
            stmt=conn.createStatement();
            rs=stmt.executeQuery("SELECT * FROM sports_mania_table WHERE Team='SYBAMC' AND event='1200 M';");
             
            while(rs.next())
            {
               p.setValueAt(rs.getString(1), rows, cols++);
               p.setValueAt(rs.getString(2), rows, cols++);
               p.setValueAt(rs.getString(3), rows, cols++);
               p.setValueAt(rs.getString(4), rows, cols++);
               p.setValueAt(rs.getString(5), rows, cols++);
               p.setValueAt(rs.getString(6), rows, cols++);
               p.setValueAt(rs.getString(7), rows, cols++);
               p.setValueAt(rs.getString(8), rows, cols++);
               p.setValueAt(rs.getString(9), rows, cols++);
               p.setValueAt(rs.getString(10), rows, cols++);
               p.setValueAt(rs.getInt(11), rows, cols++);
               p.setValueAt(rs.getString(12), rows, cols++);
               rows++;
               cols=0;
   
            }
 
               
           rs.close();
            stmt.close();
            conn.close();
       
            }
       
                
       catch(SQLException e)
        {
            System.out.print("  SQL EXCEPTION  "+e.getMessage());
        }
        catch(Exception ex)
        {
           System.out.print("  EXCEPTION  "+ex.getMessage());
        } 
 }   
     else   if(team_com.getSelectedIndex()==6)
 {p.removeAll();
        int rows=0,cols=0;
               // int i = 0;
               //  DefaultTableModel model=( DefaultTableModel) x.getModel();
        try
        {  
            conn=DriverManager.getConnection(db_URL,db_USER,db_password);
            stmt=conn.createStatement();
            rs=stmt.executeQuery("SELECT * FROM sports_mania_table WHERE Team='TYBBMM' AND event='1200 M';");
             
            while(rs.next())
            {
               p.setValueAt(rs.getString(1), rows, cols++);
               p.setValueAt(rs.getString(2), rows, cols++);
               p.setValueAt(rs.getString(3), rows, cols++);
               p.setValueAt(rs.getString(4), rows, cols++);
               p.setValueAt(rs.getString(5), rows, cols++);
               p.setValueAt(rs.getString(6), rows, cols++);
               p.setValueAt(rs.getString(7), rows, cols++);
               p.setValueAt(rs.getString(8), rows, cols++);
               p.setValueAt(rs.getString(9), rows, cols++);
               p.setValueAt(rs.getString(10), rows, cols++);
               p.setValueAt(rs.getInt(11), rows, cols++);
               p.setValueAt(rs.getString(12), rows, cols++);
               rows++;
               cols=0;
   
            }
 
               
           rs.close();
            stmt.close();
            conn.close();
       
            }
       
                
       catch(SQLException e)
        {
            System.out.print("  SQL EXCEPTION  "+e.getMessage());
        }
        catch(Exception ex)
        {
           System.out.print("  EXCEPTION  "+ex.getMessage());
        } 
 }  
       else   if(team_com.getSelectedIndex()==7)
 {p.removeAll();
        int rows=0,cols=0;
               // int i = 0;
               //  DefaultTableModel model=( DefaultTableModel) x.getModel();
        try
        {  
            conn=DriverManager.getConnection(db_URL,db_USER,db_password);
            stmt=conn.createStatement();
            rs=stmt.executeQuery("SELECT * FROM sports_mania_table WHERE Team='TYBSW' AND event='1200 M';");
             
            while(rs.next())
            {
               p.setValueAt(rs.getString(1), rows, cols++);
               p.setValueAt(rs.getString(2), rows, cols++);
               p.setValueAt(rs.getString(3), rows, cols++);
               p.setValueAt(rs.getString(4), rows, cols++);
               p.setValueAt(rs.getString(5), rows, cols++);
               p.setValueAt(rs.getString(6), rows, cols++);
               p.setValueAt(rs.getString(7), rows, cols++);
               p.setValueAt(rs.getString(8), rows, cols++);
               p.setValueAt(rs.getString(9), rows, cols++);
               p.setValueAt(rs.getString(10), rows, cols++);
               p.setValueAt(rs.getInt(11), rows, cols++);
               p.setValueAt(rs.getString(12), rows, cols++);
               rows++;
               cols=0;
   
            }
 
               
           rs.close();
            stmt.close();
            conn.close();
       
            }
       
                
       catch(SQLException e)
        {
            System.out.print("  SQL EXCEPTION  "+e.getMessage());
        }
        catch(Exception ex)
        {
           System.out.print("  EXCEPTION  "+ex.getMessage());
        } 
 }
       else   if(team_com.getSelectedIndex()==8)
 {p.removeAll();
        int rows=0,cols=0;
               // int i = 0;
               //  DefaultTableModel model=( DefaultTableModel) x.getModel();
        try
        {  
            conn=DriverManager.getConnection(db_URL,db_USER,db_password);
            stmt=conn.createStatement();
            rs=stmt.executeQuery("SELECT * FROM sports_mania_table WHERE Team='FYBBA T&T' AND event='1200 M';");
             
            while(rs.next())
            {
               p.setValueAt(rs.getString(1), rows, cols++);
               p.setValueAt(rs.getString(2), rows, cols++);
               p.setValueAt(rs.getString(3), rows, cols++);
               p.setValueAt(rs.getString(4), rows, cols++);
               p.setValueAt(rs.getString(5), rows, cols++);
               p.setValueAt(rs.getString(6), rows, cols++);
               p.setValueAt(rs.getString(7), rows, cols++);
               p.setValueAt(rs.getString(8), rows, cols++);
               p.setValueAt(rs.getString(9), rows, cols++);
               p.setValueAt(rs.getString(10), rows, cols++);
               p.setValueAt(rs.getInt(11), rows, cols++);
               p.setValueAt(rs.getString(12), rows, cols++);
               rows++;
               cols=0;
   
            }
 
               
           rs.close();
            stmt.close();
            conn.close();
       
            }
       
                
       catch(SQLException e)
        {
            System.out.print("  SQL EXCEPTION  "+e.getMessage());
        }
        catch(Exception ex)
        {
           System.out.print("  EXCEPTION  "+ex.getMessage());
        } 
 }
       else   if(team_com.getSelectedIndex()==9)
 {p.removeAll();
        int rows=0,cols=0;
               // int i = 0;
               //  DefaultTableModel model=( DefaultTableModel) x.getModel();
        try
        {  
            conn=DriverManager.getConnection(db_URL,db_USER,db_password);
            stmt=conn.createStatement();
            rs=stmt.executeQuery("SELECT * FROM sports_mania_table WHERE Team='SYBBA T&T' AND event='1200 M';");
             
            while(rs.next())
            {
               p.setValueAt(rs.getString(1), rows, cols++);
               p.setValueAt(rs.getString(2), rows, cols++);
               p.setValueAt(rs.getString(3), rows, cols++);
               p.setValueAt(rs.getString(4), rows, cols++);
               p.setValueAt(rs.getString(5), rows, cols++);
               p.setValueAt(rs.getString(6), rows, cols++);
               p.setValueAt(rs.getString(7), rows, cols++);
               p.setValueAt(rs.getString(8), rows, cols++);
               p.setValueAt(rs.getString(9), rows, cols++);
               p.setValueAt(rs.getString(10), rows, cols++);
               p.setValueAt(rs.getInt(11), rows, cols++);
               p.setValueAt(rs.getString(12), rows, cols++);
               rows++;
               cols=0;
   
            }
 
               
           rs.close();
            stmt.close();
            conn.close();
       
            }
       
                
       catch(SQLException e)
        {
            System.out.print("  SQL EXCEPTION  "+e.getMessage());
        }
        catch(Exception ex)
        {
           System.out.print("  EXCEPTION  "+ex.getMessage());
        } 
 } 
       else   if(team_com.getSelectedIndex()==10)
 {p.removeAll();
        int rows=0,cols=0;
               // int i = 0;
               //  DefaultTableModel model=( DefaultTableModel) x.getModel();
        try
        {  
            conn=DriverManager.getConnection(db_URL,db_USER,db_password);
            stmt=conn.createStatement();
            rs=stmt.executeQuery("SELECT * FROM sports_mania_table WHERE Team='TYBBA T&T' AND event='1200 M';");
             
            while(rs.next())
            {
               p.setValueAt(rs.getString(1), rows, cols++);
               p.setValueAt(rs.getString(2), rows, cols++);
               p.setValueAt(rs.getString(3), rows, cols++);
               p.setValueAt(rs.getString(4), rows, cols++);
               p.setValueAt(rs.getString(5), rows, cols++);
               p.setValueAt(rs.getString(6), rows, cols++);
               p.setValueAt(rs.getString(7), rows, cols++);
               p.setValueAt(rs.getString(8), rows, cols++);
               p.setValueAt(rs.getString(9), rows, cols++);
               p.setValueAt(rs.getString(10), rows, cols++);
               p.setValueAt(rs.getInt(11), rows, cols++);
               p.setValueAt(rs.getString(12), rows, cols++);
               rows++;
               cols=0;
   
            }
 
               
           rs.close();
            stmt.close();
            conn.close();
       
            }
       
                
       catch(SQLException e)
        {
            System.out.print("  SQL EXCEPTION  "+e.getMessage());
        }
        catch(Exception ex)
        {
           System.out.print("  EXCEPTION  "+ex.getMessage());
        } 
 }
       else   if(team_com.getSelectedIndex()==11)
 {p.removeAll();
        int rows=0,cols=0;
               // int i = 0;
               //  DefaultTableModel model=( DefaultTableModel) x.getModel();
        try
        {  
            conn=DriverManager.getConnection(db_URL,db_USER,db_password);
            stmt=conn.createStatement();
            rs=stmt.executeQuery("SELECT * FROM sports_mania_table WHERE Team='FYBCA' AND event='1200 M';");
             
            while(rs.next())
            {
               p.setValueAt(rs.getString(1), rows, cols++);
               p.setValueAt(rs.getString(2), rows, cols++);
               p.setValueAt(rs.getString(3), rows, cols++);
               p.setValueAt(rs.getString(4), rows, cols++);
               p.setValueAt(rs.getString(5), rows, cols++);
               p.setValueAt(rs.getString(6), rows, cols++);
               p.setValueAt(rs.getString(7), rows, cols++);
               p.setValueAt(rs.getString(8), rows, cols++);
               p.setValueAt(rs.getString(9), rows, cols++);
               p.setValueAt(rs.getString(10), rows, cols++);
               p.setValueAt(rs.getInt(11), rows, cols++);
               p.setValueAt(rs.getString(12), rows, cols++);
               rows++;
               cols=0;
   
            }
 
               
           rs.close();
            stmt.close();
            conn.close();
       
            }
       
                
       catch(SQLException e)
        {
            System.out.print("  SQL EXCEPTION  "+e.getMessage());
        }
        catch(Exception ex)
        {
           System.out.print("  EXCEPTION  "+ex.getMessage());
        } 
 }
        else   if(team_com.getSelectedIndex()==12)
 {p.removeAll();
        int rows=0,cols=0;
               // int i = 0;
               //  DefaultTableModel model=( DefaultTableModel) x.getModel();
        try
        {  
            conn=DriverManager.getConnection(db_URL,db_USER,db_password);
            stmt=conn.createStatement();
            rs=stmt.executeQuery("SELECT * FROM sports_mania_table WHERE Team='SYBCA' AND event='1200 M';");
             
            while(rs.next())
            {
               p.setValueAt(rs.getString(1), rows, cols++);
               p.setValueAt(rs.getString(2), rows, cols++);
               p.setValueAt(rs.getString(3), rows, cols++);
               p.setValueAt(rs.getString(4), rows, cols++);
               p.setValueAt(rs.getString(5), rows, cols++);
               p.setValueAt(rs.getString(6), rows, cols++);
               p.setValueAt(rs.getString(7), rows, cols++);
               p.setValueAt(rs.getString(8), rows, cols++);
               p.setValueAt(rs.getString(9), rows, cols++);
               p.setValueAt(rs.getString(10), rows, cols++);
               p.setValueAt(rs.getInt(11), rows, cols++);
               p.setValueAt(rs.getString(12), rows, cols++);
               rows++;
               cols=0;
   
            }
 
               
           rs.close();
            stmt.close();
            conn.close();
       
            }
       
                
       catch(SQLException e)
        {
            System.out.print("  SQL EXCEPTION  "+e.getMessage());
        }
        catch(Exception ex)
        {
           System.out.print("  EXCEPTION  "+ex.getMessage());
        } 
 }
        else   if(team_com.getSelectedIndex()==13)
 {p.removeAll();
        int rows=0,cols=0;
               // int i = 0;
               //  DefaultTableModel model=( DefaultTableModel) x.getModel();
        try
        {  
            conn=DriverManager.getConnection(db_URL,db_USER,db_password);
            stmt=conn.createStatement();
            rs=stmt.executeQuery("SELECT * FROM sports_mania_table WHERE Team='TYBCA' AND event='1200 M';");
             
            while(rs.next())
            {
               p.setValueAt(rs.getString(1), rows, cols++);
               p.setValueAt(rs.getString(2), rows, cols++);
               p.setValueAt(rs.getString(3), rows, cols++);
               p.setValueAt(rs.getString(4), rows, cols++);
               p.setValueAt(rs.getString(5), rows, cols++);
               p.setValueAt(rs.getString(6), rows, cols++);
               p.setValueAt(rs.getString(7), rows, cols++);
               p.setValueAt(rs.getString(8), rows, cols++);
               p.setValueAt(rs.getString(9), rows, cols++);
               p.setValueAt(rs.getString(10), rows, cols++);
               p.setValueAt(rs.getInt(11), rows, cols++);
               p.setValueAt(rs.getString(12), rows, cols++);
               rows++;
               cols=0;
   
            }
 
               
           rs.close();
            stmt.close();
            conn.close();
       
            }
       
                
       catch(SQLException e)
        {
            System.out.print("  SQL EXCEPTION  "+e.getMessage());
        }
        catch(Exception ex)
        {
           System.out.print("  EXCEPTION  "+ex.getMessage());
        } 
 }
    }//GEN-LAST:event_team_comActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
int y=(int)Integer.parseInt(n_tf.getText());        
        //DefaultTableModel model = (DefaultTableModel) p.getModel();


       try{
       int SelectedRowIndex = p.getSelectedRow();
     // model.removeRow(SelectedRowIndex);
        conn=DriverManager.getConnection(db_URL,db_USER,db_password);
            stmt=conn.createStatement();
            int i=stmt.executeUpdate("DELETE FROM sports_mania_table WHERE roll="+y+" ;");
         //p.clearSelection();
            if(i>=0)
                
                javax.swing.JOptionPane.showMessageDialog(rootPane, "DELETE SUCCESSFUL");
            conn.close();
       }
       catch(SQLException e)
        {
            System.out.print("SQL EXCEPTION"+e.getMessage());
        }
        catch(Exception x)
        {
            System.out.print("EXCEPTION"+x.getMessage());
        }
    }//GEN-LAST:event_deleteActionPerformed

    private void insertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertActionPerformed
 dispose();   
        mania m=new mania();
m.setVisible(true);
    }//GEN-LAST:event_insertActionPerformed

    private void wActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wActionPerformed
 dispose();   
        track_events t=new track_events();
        t.setVisible(true);
    }//GEN-LAST:event_wActionPerformed

    private void n_tfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_n_tfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_n_tfActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        dispose();   
        track1200 t=new track1200();
        t.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(track1200.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(track1200.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(track1200.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(track1200.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new track1200().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton delete;
    private javax.swing.JButton exit;
    private javax.swing.JButton insert;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField n_tf;
    private javax.swing.JTable p;
    private javax.swing.JComboBox<String> team_com;
    private javax.swing.JButton w;
    // End of variables declaration//GEN-END:variables
}
